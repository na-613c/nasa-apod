{"version":3,"sources":["components/Calendar/CalendarContainer.jsx","components/GridPictures/Picture/Picture.jsx","components/Common/Preloader/Preloader.jsx","components/GridPictures/GridPictures.jsx","components/Common/Buttons/CloseButton.js","components/Common/Buttons/PrevImageButton.js","components/Common/Buttons/NextImageButton.js","components/Common/Buttons/DownloadButton.js","components/ModalImage/ModalImage.jsx","components/Content/Content.jsx","api/api.js","redux/image-reducer.js","redux/modal-reducer.js","redux/month-image-reducer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","images/not_found.gif"],"names":["CalendarContainer","onActiveStartDateChange","onChange","value","className","Picture","img","setModal","imgArray","id","onClick","alt","title","effect","src","url","visibleByDefault","date","Preloader","GridPictures","isLoad","pictures","map","i","key","CloseButton","viewBox","xmlns","fill-rule","d","PrevImageButton","fill","NextImageButton","DownloadButton","href","target","download","ModalImage","images","movePrev","moveNext","image","viewedImages","isShow","e","isShowPrev","isShowNext","hdurl","Text","explanation","Content","useState","isHide","setIsHide","onMouseOver","onMouseOut","api_key","baseURL","getPicture","a","hd","formatDate","getQuery","response","parseResponse","day","getDate","month","getMonth","year","getFullYear","fetch","then","json","defaultImages","initImgState","imageReducer","state","action","type","newImage","initState","showHideFlow","array","size","length","resultObject","setModalImageAC","moveImageAC","modalReducer","queryCounter","query","imagesArray","setImagesArrayAC","monthImageReducer","AppContainer","compose","connect","modalImages","monthImages","isLoadMonthImages","setImage","dispatch","setModalImage","buttonShow","setModalImages","newImagesArray","setImagesArray","currentQueryCounter","daysInMonth","Date","currentDate","push","filter","localStorage","getItem","useEffect","removeItem","setItem","activeStartDate","view","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.597dfd5b.chunk.js","sourcesContent":["import React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst CalendarContainer = ({onActiveStartDateChange, onChange, value}) => {\n\n    return (\n        <div className='App-calendar'>\n            <Calendar\n                onChange={onChange}\n                value={value}\n                onActiveStartDateChange={onActiveStartDateChange}\n            />\n        </div>\n    );\n};\n\nexport default CalendarContainer;\n","import React from 'react';\r\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst Picture = ({img, setModal, imgArray, id}) => {\r\n\r\n    const setModalImages = () => {\r\n        setModal(imgArray, id)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='item' onClick={setModalImages}>\r\n            <LazyLoadImage alt={img.title}\r\n                           effect=\"blur\"\r\n                           src={img.url}\r\n                           visibleByDefault={true}/>\r\n            <p><b>{img.title}</b></p>\r\n            <p>{img.date}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Picture;","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='preloader'>\r\n            <div className=\"round\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport Picture from './Picture/Picture';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nconst GridPictures = ({imgArray, setModal, isLoad}) => {\r\n\r\n\r\n\r\n    const pictures = imgArray\r\n        .map((i, id) => <Picture key={id}\r\n                                 id={id}\r\n                                 imgArray={imgArray}\r\n                                 setModal={setModal}\r\n                                 img={i}/>);\r\n\r\n    return (\r\n        <>\r\n            {isLoad\r\n                ? <Preloader/>\r\n                : <div className='App-all-content'>\r\n                    {!imgArray ? '' : pictures}\r\n                </div>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GridPictures;","import React from \"react\";\r\nimport GridPictures from \"../../GridPictures/GridPictures\";\r\n\r\n\r\nconst CloseButton = ({onClick}) =>{\r\n    return(\r\n        <svg onClick={onClick} className='modal__cross'\r\n             viewBox=\"0 0 16 16\" xmlns='http://www.w3.org/2000/svg'>\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default CloseButton;","import React from \"react\";\r\nimport GridPictures from \"../../GridPictures/GridPictures\";\r\n\r\n\r\nconst PrevImageButton = ({onClick}) =>{\r\n    return(\r\n        <svg onClick={onClick}  viewBox=\"0 0 16 16\" className=\"arrow__left\"\r\n             fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\r\n            <path fill-rule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default PrevImageButton;","import React from \"react\";\r\n\r\n\r\nconst NextImageButton = ({onClick}) => {\r\n    return (\r\n        <svg onClick={onClick} viewBox=\"0 0 16 16\" className=\"arrow__right\"\r\n             fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n            <path fill-rule=\"evenodd\"\r\n                  d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\r\n            <path fill-rule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default NextImageButton;","import React from \"react\";\r\nimport GridPictures from \"../../GridPictures/GridPictures\";\r\n\r\n\r\nconst DownloadButton = ({url}) =>{\r\n    return(\r\n        <a href={url} target='_blank' download>\r\n            <svg className='modal__download' viewBox=\"0 0 16 16\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fill-rule=\"evenodd\"\r\n                      d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                <path fill-rule=\"evenodd\"\r\n                      d=\"M4.646 7.646a.5.5 0 0 1 .708 0L8 10.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                <path fill-rule=\"evenodd\" d=\"M8 4.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5z\"/>\r\n            </svg>\r\n        </a>\r\n    )\r\n};\r\n\r\nexport default DownloadButton;","import React from 'react';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport CloseButton from \"../Common/Buttons/CloseButton\";\r\nimport PrevImageButton from \"../Common/Buttons/PrevImageButton\";\r\nimport NextImageButton from \"../Common/Buttons/NextImageButton\";\r\nimport DownloadButton from \"../Common/Buttons/DownloadButton\";\r\n\r\n\r\nconst ModalImage = ({images, setModal, movePrev, moveNext}) => {\r\n\r\n    const onClickSetBigImage = (e) => {\r\n        if (e.target.className === 'background-big-image') setModal();\r\n    };\r\n\r\n    const image = images.viewedImages[images.key];\r\n\r\n    return (\r\n        <>\r\n            {(images.isShow) &&\r\n            <div className='background-big-image'\r\n                 key={images.key}\r\n                 onClick={onClickSetBigImage}>\r\n\r\n                {images.isShowPrev &&\r\n                <PrevImageButton\r\n                    onClick={() => movePrev(images.key, images.viewedImages)}/>\r\n                }\r\n\r\n                {images.isShowNext &&\r\n                <NextImageButton\r\n                    onClick={() => moveNext(images.key, images.viewedImages)}/>\r\n                }\r\n\r\n                <CloseButton onClick={setModal}/>\r\n                <DownloadButton url={image.hdurl}/>\r\n\r\n                <div className='big-image'>\r\n                    <img src={image.url} alt=''/>\r\n                    <p>{image.title} [ {image.date} ]</p>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ModalImage;","import React, {useState} from 'react';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nconst Content = ({img, setModal}) => {\r\n    const [isHide, setIsHide] = useState(true);\r\n    return (\r\n        <div className='App-content'>\r\n            <div className='Content-img'>\r\n                {img.isLoad\r\n                    ? <Preloader/>\r\n                    : <img onClick={() => setModal([img])}\r\n                           onMouseOver={() => setIsHide(false)}\r\n                           onMouseOut={() => setIsHide(true)}\r\n                           src={img.url}\r\n                           alt={img.title}\r\n                           title={!img.title ? '' : 'Нажмите для увеличения'}/>\r\n                }\r\n            </div>\r\n            {(isHide && !img.isLoad) && (\r\n                <Text title={img.title}\r\n                      date={img.date}\r\n                      explanation={img.explanation}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Text = ({title, date, explanation}) => {\r\n    return (\r\n        <>\r\n            <span><b>{title}</b></span>\r\n            <p>{date}</p>\r\n            <p className='Explanation'>{explanation}</p>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Content;\r\n","import defaultImages from \"../images/not_found.gif\";\r\n\r\nconst api_key = 'SaoJfZRzRAH13d01ZBCtcITtjs6ydPcNhxjK4O7c';\r\nconst baseURL = 'https://api.nasa.gov/planetary/apod';\r\n\r\n\r\nexport const getPicture = async (date, hd = false) => {\r\n    const url = `${baseURL}?date=${formatDate(date)}&api_key=${api_key}&hd=${hd}`;\r\n    const response = await getQuery(url);\r\n    return parseResponse(response);\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst getQuery = (url) => {\r\n    return fetch(url).then(response => response.json());\r\n};\r\n\r\nconst parseResponse = (response) => {\r\n    const url = !response.url ? defaultImages : response.url;\r\n    return {\r\n        url: !response.hdurl ? defaultImages : url,\r\n        hdurl: !response.hdurl ? url : response.hdurl,\r\n        title: !response.title ? 'Данных нет' : response.title,\r\n        date: !response.date ? 'Возможно дата еще не наступила или нет сохраненных данных' : response.date,\r\n        explanation: response.explanation\r\n    };\r\n};","import {getPicture} from \"../api/api\";\r\nimport defaultImages from \"../images/not_found.gif\";\r\n\r\nconst SET_IMAGE = 'SET-IMAGE';\r\nconst SET_LOADING = 'SET-LOADING';\r\n\r\nconst initImgState = {\r\n    isLoad: false,\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst imageReducer = (state = initImgState, action) => {\r\n    switch (action.type) {\r\n        case SET_IMAGE:\r\n            return {\r\n                ...state,\r\n                url: action.newImage.url,\r\n                hdurl: action.newImage.hdurl,\r\n                title: action.newImage.title,\r\n                date: action.newImage.date,\r\n                explanation: action.newImage.explanation,\r\n                isLoad: !state.isLoad\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoad: !state.isLoad\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImageAC = (newImage) => ({type: SET_IMAGE, newImage});\r\nconst setLoadingAC = () => ({type: SET_LOADING});\r\n\r\n\r\nexport const setImage = (date) => async (dispatch) => {\r\n    dispatch(setLoadingAC());\r\n    const response = await getPicture(date);\r\n    dispatch(setImageAC(response));\r\n};\r\n\r\nexport default imageReducer;","import defaultImages from \"../images/not_found.gif\";\r\n\r\nconst SET_MODAL_IMAGE = 'SET-MODAL-IMAGE';\r\nconst MOVE_ARRAY = 'MOVE-ARRAY';\r\n\r\nconst initImageState = {\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst initState = {\r\n    isShow: false,\r\n    viewedImages: [initImageState],\r\n    key: 0,\r\n    isShowPrev: false,\r\n    isShowNext: false,\r\n};\r\n\r\n\r\nconst modalReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_MODAL_IMAGE:\r\n            return !state.isShow\r\n                ? {\r\n                    ...state,\r\n                    isShow: !state.isShow,\r\n                    viewedImages: action.viewedImages,\r\n                    key: action.key,\r\n                    isShowPrev: action.isShowPrev,\r\n                    isShowNext: action.isShowNext,\r\n                }\r\n                : {\r\n                    ...state,\r\n                    isShow: !state.isShow\r\n                };\r\n        case MOVE_ARRAY:\r\n            return {\r\n                ...state,\r\n                key: action.key,\r\n                isShowPrev: action.isShowPrev,\r\n                isShowNext: action.isShowNext\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst showHideFlow = (array = [], id) => {\r\n    const size = array.length;\r\n    const resultObject = (isShowPrev, isShowNext) => ({isShowPrev, isShowNext});\r\n\r\n    if (size === 1) return resultObject(false, false);\r\n    if (id + 1 === size) return resultObject(true, false);\r\n    if (id === 0) return resultObject(false, true);\r\n    return resultObject(true, true);\r\n};\r\n\r\nconst setModalImageAC = (viewedImages, isShowPrev, isShowNext, key = 0) => ({\r\n    type: SET_MODAL_IMAGE,\r\n    viewedImages,\r\n    key,\r\n    isShowPrev,\r\n    isShowNext\r\n});\r\n\r\nconst moveImageAC = (key, isShowPrev, isShowNext) => ({type: MOVE_ARRAY, key, isShowPrev, isShowNext});\r\n\r\nexport const setModalImages = (newImagesArray, key) => (dispatch) => {\r\n    const buttonShow = showHideFlow(newImagesArray, key);\r\n    dispatch(setModalImageAC(newImagesArray, buttonShow.isShowPrev, buttonShow.isShowNext, key));\r\n};\r\n\r\nexport const setModalImage = (newImage) => (dispatch) => {\r\n    const buttonShow = showHideFlow(newImage, 0);\r\n    dispatch(setModalImageAC(newImage, buttonShow.isShowPrev, buttonShow.isShowNext));\r\n};\r\n\r\nexport const movePrev = (key,images) => (dispatch) => {\r\n    key--;\r\n    const buttonShow = showHideFlow(images, key);\r\n    dispatch(moveImageAC(key, buttonShow.isShowPrev, buttonShow.isShowNext));\r\n};\r\n\r\nexport const moveNext = (key,images) => (dispatch) => {\r\n    key++;\r\n    const buttonShow = showHideFlow(images, key);\r\n    dispatch(moveImageAC(key, buttonShow.isShowPrev, buttonShow.isShowNext));\r\n};\r\n\r\nexport default modalReducer;","import {getPicture} from \"../api/api\";\r\n\r\nconst SET_ARRAY = 'SET-ARRAY';\r\nconst START_LOADING = 'START-LOADING';\r\nlet queryCounter = 0;\r\n\r\nconst initState = {\r\n    query: 0,\r\n    isLoad: false,\r\n    imagesArray: []\r\n};\r\n\r\nconst monthImageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARRAY:\r\n            return (state.query === action.query) ? {\r\n                ...state,\r\n                query: action.query,\r\n                imagesArray: action.imagesArray,\r\n                isLoad: false\r\n            } : {\r\n                ...state,\r\n                isLoad: true\r\n            };\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                query: action.query > state.query ? action.query : state.query,\r\n                isLoad: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImagesArrayAC = (imagesArray, query) => ({type: SET_ARRAY, imagesArray, query});\r\nconst startLoadingAC = (query) => ({type: START_LOADING, query});\r\n\r\nexport const setImagesArray = (date) => async (dispatch) => {\r\n    const currentQueryCounter = ++queryCounter;\r\n    dispatch(startLoadingAC(currentQueryCounter));\r\n\r\n    let imagesArray = [];\r\n    const daysInMonth = 32 - new Date(date.getFullYear(), date.getMonth(), 32).getDate();\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n        let currentDate = new Date(date.getFullYear(), date.getMonth(), i);\r\n        imagesArray.push(await getPicture(currentDate));\r\n    }\r\n\r\n    dispatch(setImagesArrayAC(imagesArray.filter(i => i.explanation), currentQueryCounter));\r\n};\r\n\r\n\r\nexport default monthImageReducer;","import React, {useEffect} from 'react';\nimport CalendarContainer from './components/Calendar/CalendarContainer';\nimport GridPictures from './components/GridPictures/GridPictures';\nimport ModalImage from './components/ModalImage/ModalImage';\nimport Content from './components/Content/Content';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {setImage} from \"./redux/image-reducer\";\nimport {moveNext, movePrev, setModalImage, setModalImages} from \"./redux/modal-reducer\";\nimport {setImagesArray} from \"./redux/month-image-reducer\";\nimport {formatDate} from \"./api/api\";\n\n\nconst App = ({\n                 image, modalImages, monthImages, isLoadMonthImages, setImage, setModalImage,\n                 setImagesArray, setModalImages, movePrev, moveNext\n             }) => {\n    const getDate = () => {\n        return !localStorage.getItem('date')\n            ? new Date()\n            : new Date(localStorage.getItem('date'));\n    };\n\n    useEffect(() => {\n        setImage(getDate());\n        setImagesArray(getDate());\n    }, []);\n\n    let onChange = (value) => {\n        const localDate = formatDate(value);\n        const currentDate = formatDate(new Date());\n\n        localDate === currentDate\n            ? localStorage.removeItem('date')\n            : localStorage.setItem('date', value);\n\n        setImage(value);\n    };\n\n    const onActiveStartDateChange = ({activeStartDate, value, view}) => {\n        setImagesArray(activeStartDate);\n    };\n\n    return (\n        <div className='App-wrapper'>\n            <CalendarContainer\n                onChange={onChange}\n                onActiveStartDateChange={onActiveStartDateChange}\n                value={getDate()}/>\n            <Content img={image} setModal={setModalImage}/>\n            <GridPictures imgArray={monthImages} setModal={setModalImages} isLoad={isLoadMonthImages}/>\n            <ModalImage images={modalImages} setModal={setModalImage} movePrev={movePrev} moveNext={moveNext}/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    image: state.imageReducer,\n    modalImages: state.modalReducer,\n    monthImages: state.monthImageReducer.imagesArray,\n    isLoadMonthImages: state.monthImageReducer.isLoad\n});\n\nconst AppContainer = compose(\n    connect(mapStateToProps, {\n        setImage,\n        setModalImage,\n        setModalImages,\n        setImagesArray,\n        movePrev,\n        moveNext\n    })\n)(App);\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport imageReducer from './image-reducer';\r\nimport modalReducer from \"./modal-reducer\";\r\nimport monthImageReducer from \"./month-image-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    imageReducer,\r\n    modalReducer,\r\n    monthImageReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from \"./redux/redux-store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/not_found.e9ff6ff5.gif\";"],"sourceRoot":""}