{"version":3,"sources":["components/Calendar/CalendarContainer.jsx","components/Common/ImageVideoFlow/ImageVideoFlow.jsx","components/GridPictures/Picture/Picture.jsx","components/Common/Preloader/Preloader.jsx","components/GridPictures/GridPictures.jsx","components/Common/Buttons/CloseButton.js","components/Common/Buttons/DataTitle.js","components/Common/Buttons/PrevImageButton.js","components/Common/Buttons/NextImageButton.js","components/Common/Buttons/DownloadButton.js","components/ModalImage/ModalImage.jsx","components/Content/Content.jsx","api/api.js","redux/image-reducer.js","redux/modal-reducer.js","redux/month-image-reducer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","images/not_found.gif"],"names":["CalendarContainer","onActiveStartDateChange","onChange","value","className","locale","Image","title","url","restProp","alt","effect","src","visibleByDefault","Video","frameBorder","allowFullScreen","allowtransparency","ImageVideoFlow","media_type","Picture","img","setModal","imgArray","id","onClick","date","Preloader","GridPictures","isLoad","pictures","map","i","key","CloseButton","data-title","viewBox","xmlns","fillRule","d","PrevImageButton","NextImageButton","DownloadButton","href","target","download","Explanation","explanation","ModalImage","images","movePrev","moveNext","image","viewedImages","useState","isShowExplanation","setIsShowExplanation","modalClass","setModalClass","imageClass","setImageClass","useEffect","isShow","bg_class","e","modal_content","isShowPrev","isShowNext","hdurl","Text","Content","isHide","setIsHide","onMouseOver","onMouseOut","api_key","baseURL","getPicture","a","hd","formatDate","getQuery","response","parseResponse","day","getDate","month","getMonth","year","getFullYear","fetch","then","json","defaultImages","initImgState","imageReducer","state","action","type","newImage","initState","showHideFlow","array","size","length","resultObject","setModalImageAC","moveImageAC","modalReducer","queryCounter","query","imagesArray","setImagesArrayAC","monthImageReducer","AppContainer","compose","connect","modalImages","monthImages","isLoadMonthImages","setImage","dispatch","setModalImage","buttonShow","setModalImages","newImagesArray","setImagesArray","currentQueryCounter","daysInMonth","Date","currentDate","push","filter","localStorage","getItem","removeItem","setItem","activeStartDate","view","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"iRAkBeA,G,MAdW,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,wBAAyBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAE3D,OACI,yBAAKC,UAAU,gBACX,kBAAC,IAAD,CACIF,SAAUA,EACVC,MAAOA,EACPF,wBAAyBA,EACzBI,OAAO,U,wBCEjBC,EAAQ,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,IAAQC,EAAc,+BACzC,OACI,kBAAC,gBAAD,eAAeC,IAAKH,EACLA,MAAOA,EACPI,OAAO,OACPC,IAAKJ,EACLK,kBAAkB,GACdJ,KAIrBK,EAAQ,SAAC,GAAW,IAAVN,EAAS,EAATA,IACZ,OAAQ,4BAAQI,IAAKJ,EAAKO,YAAY,IAAIC,iBAAe,EAACC,kBAAkB,OAAOV,MAAOC,KAG/EU,EAzBQ,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,WAAYZ,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,IAAQC,EAAc,4CAC9D,OAAQU,GACJ,IAAK,QACD,OAAO,kBAAC,EAAD,eAAOZ,MAAOA,EAAOC,IAAKA,GAASC,IAC9C,IAAK,QACD,OAAO,kBAAC,EAAD,eAAOD,IAAKA,GAASC,IAChC,QAAS,OAAO,OCOTW,EAbC,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,GAIvC,OACI,yBAAKpB,UAAU,OAAOqB,QAHH,kBAAMH,EAASC,EAAUC,KAIxC,kBAAC,EAAD,CAAgBL,WAAYE,EAAIF,WAAYZ,MAAOc,EAAId,MAAOC,IAAKa,EAAIb,MACvE,2BAAG,2BAAIa,EAAId,QACX,2BAAIc,EAAIK,QCDLC,G,MARG,WACd,OACI,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,aCqBZwB,EAtBM,SAAC,GAAkC,IAAjCL,EAAgC,EAAhCA,SAAUD,EAAsB,EAAtBA,SAAUO,EAAY,EAAZA,OAIjCC,EAAWP,EACZQ,KAAI,SAACC,EAAGR,GAAJ,OAAW,kBAAC,EAAD,CAASS,IAAKT,EACLA,GAAIA,EACJD,SAAUA,EACVD,SAAUA,EACVD,IAAKW,OAElC,OACI,oCACKH,EACK,kBAAC,EAAD,MACA,yBAAKzB,UAAU,mBACXmB,EAAgBO,EAAL,M,OCClBI,EAlBK,SAAC,GAAe,IAAdT,EAAa,EAAbA,QAClB,OACI,yBAAKrB,UAAU,qBAAqB+B,aCFjB,SDGf,yBAAKV,QAASA,EAASrB,UAAU,QAC7B,yBACIgC,QAAQ,YAAYC,MAAM,8BAC1B,0BAAMC,SAAS,UACTC,EAAE,0EACR,0BAAMD,SAAS,UACTC,EAAE,qFACR,0BAAMD,SAAS,UACTC,EAAE,wFEIbC,EAfS,SAAC,GAAe,IAAdf,EAAa,EAAbA,QACtB,OACI,yBAAKrB,UAAU,oBAAoB+B,aDCZ,YCAnB,yBAAKV,QAASA,EACTW,QAAQ,YAAYC,MAAM,8BAC3B,0BAAMC,SAAS,UACTC,EAAE,0EACR,0BAAMD,SAAS,UACTC,EAAE,2HACR,0BAAMD,SAAS,UAAUC,EAAE,qECM5BE,EAfS,SAAC,GAAe,IAAdhB,EAAa,EAAbA,QACtB,OACI,yBAAKrB,UAAU,qBAAqB+B,aFAb,QECnB,yBAAKV,QAASA,EACTW,QAAQ,YAAYC,MAAM,8BAC3B,0BAAMC,SAAS,UACTC,EAAE,0EACR,0BAAMD,SAAS,UACTC,EAAE,4HACR,0BAAMD,SAAS,UAAUC,EAAE,oECO5BG,EAjBQ,SAAC,GAAW,IAAVlC,EAAS,EAATA,IACrB,OACI,yBAAKJ,UAAU,yBAAyB+B,aHAlB,YGClB,uBAAGQ,KAAMnC,EAAKoC,OAAO,SAASC,UAAQ,GAClC,yBAAKT,QAAQ,YACRC,MAAM,8BACP,0BAAMC,SAAS,UACTC,EAAE,0EACR,0BAAMD,SAAS,UACTC,EAAE,2HACR,0BAAMD,SAAS,UAAUC,EAAE,oECqFzCO,EAAc,SAAC,GAA+B,IAA9B3B,EAA6B,EAA7BA,WAAY4B,EAAiB,EAAjBA,YAC9B,OAAQ5B,GACJ,IAAK,QACD,OAAO,yBAAKf,UAAU,UAAU2C,GACpC,IAAK,QACD,OAAO,yBAAK3C,UAAU,YAAY2C,GACtC,QACI,OAAO,OAIJC,EApGI,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,OAAQ3B,EAAkC,EAAlCA,SAAU4B,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAKvCC,EAAQH,EAAOI,aAAaJ,EAAOhB,KALkB,EAOTqB,oBAAS,GAPA,mBAOpDC,EAPoD,KAOjCC,EAPiC,OAQvBF,mBAAS,IARc,mBAQpDG,EARoD,KAQxCC,EARwC,OASvBJ,mBAAS,IATc,mBASpDK,EAToD,KASxCC,EATwC,KAW3DC,qBAAU,WACNH,EAAc,8BACdE,EAAc,IACdJ,GAAqB,KACtB,CAACP,EAAOa,SA4BX,OACI,oCACMb,EAAOa,QACT,yBAAK1D,UAAW2D,0BAAiBN,EAC5BhC,QAhBc,SAACuC,GAExB,OADoBA,EAAEpB,OAAOxC,WAEzB,IAhCS,yBAiCT,IAhCc,gBAiCd,IAhCoB,sBAiChB,OAAOkB,IACX,QACI,OAAO,OASNW,IAAKgB,EAAOhB,KAEb,yBAAK7B,UAAW6D,iBAAsBN,GAClC,yBAAKvD,UA/CO,uBAgDP6C,EAAOiB,YACR,kBAAC,EAAD,CACIzC,QA9BL,WACfyB,EAASD,EAAOhB,IAAKgB,EAAOI,cAC5BK,EAAc,IACdE,EAAc,iBA8BGX,EAAOkB,YACR,kBAAC,EAAD,CACI1C,QAzCL,WACf0B,EAASF,EAAOhB,IAAKgB,EAAOI,cAC5BK,EAAc,IACdE,EAAc,gBAyCE,kBAAC,EAAD,CAAanC,QAASH,IACtB,kBAAC,EAAD,CAAgBd,IAAK4C,EAAMgB,QAE3B,yBAAKhE,UAAU,qBACVmD,GACD,kBAAC,EAAD,CAAapC,WAAYiC,EAAMjC,WAAY4B,YAAaK,EAAML,cAG9D,kBAAC,EAAD,CAAgB5B,WAAYiC,EAAMjC,WAClBZ,MAAO6C,EAAM7C,MACbC,IAAK4C,EAAM5C,QAInC,2BAAI4C,EAAM7C,MAAV,MAAoB6C,EAAM1B,KAA1B,MAAkC,uBAC9BtB,UAAU,aACVqB,QAAS,kBAAM+B,GAAsBD,KAFP,wBCvDhDc,EAAO,SAAC,GAAgC,IAA/B9D,EAA8B,EAA9BA,MAAOmB,EAAuB,EAAvBA,KAAMqB,EAAiB,EAAjBA,YACxB,OACI,yBAAK3C,UAAU,QACX,8BAAM,2BAAIG,IACV,2BAAImB,GACJ,uBAAGtB,UAAU,eAAe2C,KAKzBuB,EApCC,SAAC,GAAqB,IAApBjD,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,SAAc,EACLgC,oBAAS,GADJ,mBAC1BiB,EAD0B,KAClBC,EADkB,KAGjC,OACI,yBAAKpE,UAAU,eACX,yBAAKA,UAAU,eACViB,EAAIQ,OACC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBV,WAAYE,EAAIF,WAChBZ,MAAO,6HACPC,IAAKa,EAAIb,IACTiB,QAAS,kBAAMH,EAAS,CAACD,KACzBoD,YAAa,kBAAMD,GAAU,IAC7BE,WAAY,kBAAMF,GAAU,OAIpDD,IAAWlD,EAAIQ,QACb,kBAAC,EAAD,CAAMtB,MAAOc,EAAId,MACXmB,KAAML,EAAIK,KACVqB,YAAa1B,EAAI0B,gB,oECtBjC4B,EAAU,2CACVC,EAAU,sCAGHC,EAAU,uCAAG,WAAOnD,GAAP,+BAAAoD,EAAA,6DAAaC,EAAb,gCAChBvE,EADgB,UACPoE,EADO,iBACSI,EAAWtD,GADpB,oBACqCiD,EADrC,eACmDI,GADnD,SAECE,EAASzE,GAFV,cAEhB0E,EAFgB,yBAGfC,EAAcD,IAHC,2CAAH,sDAMVF,EAAa,SAACtD,GACvB,IAAM0D,EAAM1D,EAAK2D,UACXC,EAAQ5D,EAAK6D,WAAa,EAC1BC,EAAO9D,EAAK+D,cAElB,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAlB,YAA2BF,IAezBH,EAAW,SAACzE,GACd,OAAOkF,MAAMlF,GAAKmF,MAAK,SAAAT,GAAQ,OAAIA,EAASU,WAG1CT,EAAgB,SAACD,GACnB,IAAM1E,EAAO0E,EAAS1E,IAAsB0E,EAAS1E,IAAzBqF,IAC5B,MAAO,CACHrF,IAAM0E,EAAS1E,IAAsBA,EAAhBqF,IACrBzB,MAAQc,EAASd,MAAcc,EAASd,MAAf5D,EACzBD,MAAQ2E,EAAS3E,MAAuB2E,EAAS3E,MAAxB,0DACzBY,WAAa+D,EAAS/D,WAAuB+D,EAAS/D,WAAnB,QACnCO,KAAOwD,EAASxD,KAAqEwD,EAASxD,KAAvE,iTACvBqB,YAAamC,EAASnC,cCtCxB+C,EAAe,CACjBjE,QAAQ,EACRrB,IAAKqF,IACLzB,MAAOyB,IACP1E,WAAW,QACXZ,MAAO,0DACPmB,KAAM,iTACNqB,YAAa,IAoCFgD,EAjCM,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACnD,OAAQA,EAAOC,MACX,IAfU,YAgBN,OAAO,2BACAF,GADP,IAEIxF,IAAKyF,EAAOE,SAAS3F,IACrB4D,MAAO6B,EAAOE,SAAS/B,MACvBjD,WAAY8E,EAAOE,SAAShF,WAC5BZ,MAAO0F,EAAOE,SAAS5F,MACvBmB,KAAMuE,EAAOE,SAASzE,KACtBqB,YAAakD,EAAOE,SAASpD,YAC7BlB,QAASmE,EAAMnE,SAEvB,IAzBY,cA0BR,OAAO,2BACAmE,GADP,IAEInE,QAASmE,EAAMnE,SAEvB,QACI,OAAOmE,ICrBbI,EAAY,CACdtC,QAAQ,EACRT,aAAc,CAXK,CACnB7C,IAAKqF,IACLzB,MAAOyB,IACP1E,WAAW,QACXZ,MAAO,0DACPmB,KAAM,iTACNqB,YAAa,KAMbd,IAAK,EACLiC,YAAY,EACZC,YAAY,GAgCVkC,EAAe,WAAqB,IAApBC,EAAmB,uDAAX,GAAI9E,EAAO,uCAC/B+E,EAAOD,EAAME,OACbC,EAAe,SAACvC,EAAYC,GAAb,MAA6B,CAACD,aAAYC,eAE/D,OAAa,IAAToC,EAAmBE,GAAa,GAAO,GACvCjF,EAAK,IAAM+E,EAAaE,GAAa,GAAM,GAC1BA,EAAV,IAAPjF,GAAqC,IAIvCkF,EAAkB,SAACrD,EAAca,EAAYC,GAA3B,IAAuClC,EAAvC,uDAA6C,EAA7C,MAAoD,CACxEiE,KA5DoB,kBA6DpB7C,eACApB,MACAiC,aACAC,eAGEwC,EAAc,SAAC1E,EAAKiC,EAAYC,GAAlB,MAAkC,CAAC+B,KAlEpC,aAkEsDjE,MAAKiC,aAAYC,eAwB3EyC,EAtEM,WAAgC,IAA/BZ,EAA8B,uDAAtBI,EAAWH,EAAW,uCAChD,OAAQA,EAAOC,MACX,IAvBgB,kBAwBZ,OAAQF,EAAMlC,OAAP,2BAUIkC,GAVJ,IAWClC,QAASkC,EAAMlC,SAXhB,2BAEIkC,GAFJ,IAGClC,QAASkC,EAAMlC,OACfT,aAAc4C,EAAO5C,aACrBpB,IAAKgE,EAAOhE,IACZiC,WAAY+B,EAAO/B,WACnBC,WAAY8B,EAAO9B,aAM/B,IApCW,aAqCP,OAAO,2BACA6B,GADP,IAEI/D,IAAKgE,EAAOhE,IACZiC,WAAY+B,EAAO/B,WACnBC,WAAY8B,EAAO9B,aAE3B,QACI,OAAO6B,IC3Cfa,EAAe,EAEbT,EAAY,CACdU,MAAO,EACPjF,QAAQ,EACRkF,YAAa,IA0BXC,EAAmB,SAACD,EAAaD,GAAd,MAAyB,CAACZ,KAjCjC,YAiCkDa,cAAaD,UAmBlEG,EA1CW,WAAgC,IAA/BjB,EAA8B,uDAAtBI,EAAWH,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAZU,YAaN,OAAQF,EAAMc,QAAUb,EAAOa,MAAxB,YAAC,eACDd,GADA,IAEHc,MAAOb,EAAOa,MACdC,YAAad,EAAOc,YACpBlF,QAAQ,IAJL,YAAC,eAMDmE,GANA,IAOHnE,QAAQ,IAEhB,IArBc,gBAsBV,OAAO,2BACAmE,GADP,IAEIc,MAAOb,EAAOa,MAAQd,EAAMc,MAAQb,EAAOa,MAAQd,EAAMc,MACzDjF,QAAQ,IAEhB,QACI,OAAOmE,IC6CJkB,EAXMC,YACjBC,aARoB,SAACpB,GAAD,MAAY,CAChC5C,MAAO4C,EAAMD,aACbsB,YAAarB,EAAMY,aACnBU,YAAatB,EAAMiB,kBAAkBF,YACrCQ,kBAAmBvB,EAAMiB,kBAAkBpF,UAIlB,CACrB2F,SHxBgB,SAAC9F,GAAD,8CAAU,WAAO+F,GAAP,eAAA3C,EAAA,6DAC9B2C,EAJwB,CAACvB,KApCT,gBAuCc,SAEPrB,EAAWnD,GAFJ,OAExBwD,EAFwB,OAG9BuC,EAP8B,CAACvB,KApCjB,YAoCkCC,SAO5BjB,IAHU,2CAAV,uDGyBhBwC,cFQqB,SAACvB,GAAD,OAAc,SAACsB,GACxC,IAAME,EAAatB,EAAaF,EAAU,GAC1CsB,EAASf,EAAgBP,EAAUwB,EAAWzD,WAAYyD,EAAWxD,eETjEyD,eFEsB,SAACC,EAAgB5F,GAAjB,OAAyB,SAACwF,GACpD,IAAME,EAAatB,EAAawB,EAAgB5F,GAChDwF,EAASf,EAAgBmB,EAAgBF,EAAWzD,WAAYyD,EAAWxD,WAAYlC,MEHnF6F,eDhCsB,SAACpG,GAAD,8CAAU,WAAO+F,GAAP,uBAAA3C,EAAA,sDAC9BiD,IAAwBlB,EAC9BY,EAJ+B,CAACvB,KAjCd,gBAiCmCY,MAI7BiB,IAEpBhB,EAAc,GACZiB,EAAc,GAAK,IAAIC,KAAKvG,EAAK+D,cAAe/D,EAAK6D,WAAY,IAAIF,UAElErD,EAAI,EAPuB,YAOpBA,GAAKgG,GAPe,wBAQ5BE,EAAc,IAAID,KAAKvG,EAAK+D,cAAe/D,EAAK6D,WAAYvD,GARhC,KAShC+E,EATgC,UASTlC,EAAWqD,GATF,yBASpBC,KAToB,wBAOFnG,IAPE,uBAYpCyF,EAAST,EAAiBD,EAAYqB,QAAO,SAAApG,GAAC,OAAIA,EAAEe,eAAcgF,IAZ9B,4CAAV,uDCiCtB7E,SFUgB,SAACjB,EAAIgB,GAAL,OAAgB,SAACwE,GACrCxF,IACA,IAAM0F,EAAatB,EAAapD,EAAQhB,GACxCwF,EAASd,EAAY1E,EAAK0F,EAAWzD,WAAYyD,EAAWxD,eEZxDhB,SFegB,SAAClB,EAAIgB,GAAL,OAAgB,SAACwE,GACrCxF,IACA,IAAM0F,EAAatB,EAAapD,EAAQhB,GACxCwF,EAASd,EAAY1E,EAAK0F,EAAWzD,WAAYyD,EAAWxD,iBEzB3CgD,EAlDT,SAAC,GAGO,IAFH/D,EAEE,EAFFA,MAAOiE,EAEL,EAFKA,YAAaC,EAElB,EAFkBA,YAAaC,EAE/B,EAF+BA,kBAAmBC,EAElD,EAFkDA,SAAUE,EAE5D,EAF4DA,cAC9DI,EACE,EADFA,eAAgBF,EACd,EADcA,eAAgB1E,EAC9B,EAD8BA,SAAUC,EACxC,EADwCA,SAEjDkC,EAAU,WACZ,OAAQgD,aAAaC,QAAQ,QAEvB,IAAIL,KAAKI,aAAaC,QAAQ,SAD9B,IAAIL,MAIdpE,qBAAU,WACN2D,EAASnC,KACTyC,EAAezC,OAChB,IAiBH,OACI,yBAAKjF,UAAU,eACX,kBAAC,EAAD,CACIF,SAlBG,SAACC,GACM6E,EAAW7E,KACT6E,EAAW,IAAIiD,MAG7BI,aAAaE,WAAW,QACxBF,aAAaG,QAAQ,OAAQrI,GAEnCqH,EAASrH,IAWDF,wBARoB,SAAC,GAAoC,IAAnCwI,EAAkC,EAAlCA,gBAAkC,EAAjBtI,MAAiB,EAAVuI,KACtDZ,EAAeW,IAQPtI,MAAOkF,MACX,kBAAC,EAAD,CAAShE,IAAK+B,EAAO9B,SAAUoG,IAC/B,kBAAC,EAAD,CAAcnG,SAAU+F,EAAahG,SAAUsG,EAAgB/F,OAAQ0F,IACvE,kBAAC,EAAD,CAAYtE,OAAQoE,EAAa/F,SAAUoG,EAAexE,SAAUA,EAAUC,SAAUA,QCzChFwF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCZFC,EAAWC,YAAgB,CAC3BlD,eACAa,eACAK,sBAGEiC,GAAmBN,OAAOO,sCAAwChC,IAClEiC,GAAQC,YAAYL,EAAgCE,GAAiBI,YAAgBC,OAE3FX,OAAOQ,MAAQA,GAEAA,UCRfI,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,EAAD,OAEJM,SAASC,eAAe,SFsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnE,MAAK,SAAAoE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBGzI5BC,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.1d2ac0ca.chunk.js","sourcesContent":["import React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst CalendarContainer = ({onActiveStartDateChange, onChange, value}) => {\n\n    return (\n        <div className='App-calendar'>\n            <Calendar\n                onChange={onChange}\n                value={value}\n                onActiveStartDateChange={onActiveStartDateChange}\n                locale='en'\n            />\n        </div>\n    );\n};\n\nexport default CalendarContainer;\n","import {LazyLoadImage} from \"react-lazy-load-image-component\";\r\nimport React from \"react\";\r\n\r\n\r\nconst ImageVideoFlow = ({media_type, title, url, ...restProp}) => {\r\n    switch (media_type) {\r\n        case 'image':\r\n            return <Image title={title} url={url} {...restProp}/>;\r\n        case 'video':\r\n            return <Video url={url} {...restProp}/>;\r\n        default: return null;\r\n    }\r\n};\r\n\r\nconst Image = ({title, url, ...restProp}) => {\r\n    return (\r\n        <LazyLoadImage alt={title}\r\n                       title={title}\r\n                       effect=\"blur\"\r\n                       src={url}\r\n                       visibleByDefault={true}\r\n                       {...restProp}/>\r\n    )\r\n};\r\n\r\nconst Video = ({url}) => {\r\n    return  <iframe src={url} frameBorder=\"0\" allowFullScreen allowtransparency='true' title={url}/>;\r\n};\r\n\r\nexport default ImageVideoFlow;","import React from 'react';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport ImageVideoFlow from \"../../Common/ImageVideoFlow/ImageVideoFlow\";\r\n\r\nconst Picture = ({img, setModal, imgArray, id}) => {\r\n\r\n    const setModalImages = () => setModal(imgArray, id);\r\n\r\n    return (\r\n        <div className='item' onClick={setModalImages}>\r\n            <ImageVideoFlow media_type={img.media_type} title={img.title} url={img.url}/>\r\n            <p><b>{img.title}</b></p>\r\n            <p>{img.date}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Picture;","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='preloader'>\r\n            <div className=\"round\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport Picture from './Picture/Picture';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nconst GridPictures = ({imgArray, setModal, isLoad}) => {\r\n\r\n\r\n\r\n    const pictures = imgArray\r\n        .map((i, id) => <Picture key={id}\r\n                                 id={id}\r\n                                 imgArray={imgArray}\r\n                                 setModal={setModal}\r\n                                 img={i}/>);\r\n\r\n    return (\r\n        <>\r\n            {isLoad\r\n                ? <Preloader/>\r\n                : <div className='App-all-content'>\r\n                    {!imgArray ? '' : pictures}\r\n                </div>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GridPictures;","import React from \"react\";\r\nimport {closeButton} from \"./DataTitle\";\r\n\r\n\r\nconst CloseButton = ({onClick}) => {\r\n    return (\r\n        <div className='modal__cross title' data-title={closeButton}>\r\n            <div onClick={onClick} className='area'>\r\n                <svg\r\n                    viewBox=\"0 0 16 16\" xmlns='http://www.w3.org/2000/svg'>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CloseButton;","// export const closeButton = \"Закрыть\";\r\n// export const downloadButton = \"Скачать\";\r\n// export const nextImageButton = \"Следующая картинка\";\r\n// export const prevImageButton = \"Предыдущая картинка\";\r\nexport const closeButton = \"Close\";\r\nexport const downloadButton = \"Download\";\r\nexport const nextImageButton = \"Next\";\r\nexport const prevImageButton = \"Previous\";\r\nexport const infoButton = \"More information\";","import React from \"react\";\r\nimport {prevImageButton} from \"./DataTitle\";\r\n\r\n\r\nconst PrevImageButton = ({onClick}) => {\r\n    return (\r\n        <div className='arrow__left title' data-title={prevImageButton}>\r\n            <svg onClick={onClick}\r\n                 viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\r\n                <path fillRule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PrevImageButton;","import React from \"react\";\r\nimport {nextImageButton} from \"./DataTitle\";\r\n\r\n\r\nconst NextImageButton = ({onClick}) => {\r\n    return (\r\n        <div className='arrow__right title' data-title={nextImageButton}>\r\n            <svg onClick={onClick}\r\n                 viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\r\n                <path fillRule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NextImageButton;","import React from \"react\";\r\nimport {downloadButton} from \"./DataTitle\";\r\n\r\nconst DownloadButton = ({url}) => {\r\n    return (\r\n        <div className='modal__download  title' data-title={downloadButton}>\r\n            <a href={url} target='_blank' download>\r\n                <svg viewBox=\"0 0 16 16\"\r\n                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M4.646 7.646a.5.5 0 0 1 .708 0L8 10.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                    <path fillRule=\"evenodd\" d=\"M8 4.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5z\"/>\r\n                </svg>\r\n            </a>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DownloadButton;","import React, {useEffect, useState} from 'react';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport CloseButton from \"../Common/Buttons/CloseButton\";\r\nimport PrevImageButton from \"../Common/Buttons/PrevImageButton\";\r\nimport NextImageButton from \"../Common/Buttons/NextImageButton\";\r\nimport DownloadButton from \"../Common/Buttons/DownloadButton\";\r\nimport ImageVideoFlow from \"../Common/ImageVideoFlow/ImageVideoFlow\";\r\n\r\n\r\nconst ModalImage = ({images, setModal, movePrev, moveNext}) => {\r\n\r\n    const bg_class = 'background-modal-image';\r\n    const modal_content = 'modal-content';\r\n    const modal_image_content = 'modal-image-content';\r\n    const image = images.viewedImages[images.key];\r\n\r\n    const [isShowExplanation, setIsShowExplanation] = useState(false);\r\n    const [modalClass, setModalClass] = useState('');\r\n    const [imageClass, setImageClass] = useState('');\r\n\r\n    useEffect(() => {\r\n        setModalClass('background-modal-animation');\r\n        setImageClass('');\r\n        setIsShowExplanation(false);\r\n    }, [images.isShow]);\r\n\r\n\r\n    const nextButton = () => {\r\n        moveNext(images.key, images.viewedImages);\r\n        setModalClass('');\r\n        setImageClass('slideLeft');\r\n    };\r\n\r\n    const prevButton = () => {\r\n        movePrev(images.key, images.viewedImages);\r\n        setModalClass('');\r\n        setImageClass('slideRight');\r\n    };\r\n\r\n\r\n    const onClickSetBigImage = (e) => {\r\n        const targetClass = e.target.className;\r\n        switch (targetClass) {\r\n            case  bg_class :\r\n            case  modal_content :\r\n            case  modal_image_content :\r\n                return setModal();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {(images.isShow) &&\r\n            <div className={bg_class + ' ' + modalClass}\r\n                 onClick={onClickSetBigImage}\r\n                 key={images.key}>\r\n\r\n                <div className={modal_content + ' ' + imageClass}>\r\n                    <div className={modal_image_content}>\r\n                        {images.isShowPrev &&\r\n                        <PrevImageButton\r\n                            onClick={prevButton}/>\r\n                        }\r\n\r\n                        {images.isShowNext &&\r\n                        <NextImageButton\r\n                            onClick={nextButton}/>\r\n                        }\r\n\r\n                        <CloseButton onClick={setModal}/>\r\n                        <DownloadButton url={image.hdurl}/>\r\n\r\n                        <div className='image-explanation'>\r\n                            {isShowExplanation &&\r\n                            <Explanation media_type={image.media_type} explanation={image.explanation}/>\r\n                            }\r\n\r\n                            <ImageVideoFlow media_type={image.media_type}\r\n                                            title={image.title}\r\n                                            url={image.url}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <p>{image.title} [ {image.date} ] <a\r\n                        className=\"more__info\"\r\n                        onClick={() => setIsShowExplanation(!isShowExplanation)}>\r\n                            more informtion\r\n                        </a>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n};\r\n\r\nconst Explanation = ({media_type, explanation}) => {\r\n    switch (media_type) {\r\n        case 'image':\r\n            return <div className='pullUp'>{explanation}</div>;\r\n        case 'video':\r\n            return <div className='pullDown'>{explanation}</div>;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport default ModalImage;","import React, {useState} from 'react';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport ImageVideoFlow from \"../Common/ImageVideoFlow/ImageVideoFlow\";\r\n\r\nconst Content = ({img, setModal}) => {\r\n    const [isHide, setIsHide] = useState(true);\r\n\r\n    return (\r\n        <div className='App-content'>\r\n            <div className='Content-img'>\r\n                {img.isLoad\r\n                    ? <Preloader/>\r\n                    : <ImageVideoFlow media_type={img.media_type}\r\n                                      title={'Нажмите для увеличения'}\r\n                                      url={img.url}\r\n                                      onClick={() => setModal([img])}\r\n                                      onMouseOver={() => setIsHide(false)}\r\n                                      onMouseOut={() => setIsHide(true)}/>\r\n\r\n                }\r\n            </div>\r\n            {(isHide && !img.isLoad) && (\r\n                <Text title={img.title}\r\n                      date={img.date}\r\n                      explanation={img.explanation}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Text = ({title, date, explanation}) => {\r\n    return (\r\n        <div className='info'>\r\n            <span><b>{title}</b></span>\r\n            <p>{date}</p>\r\n            <p className='Explanation'>{explanation}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Content;\r\n","import defaultImages from \"../images/not_found.gif\";\r\n\r\nconst api_key = 'SaoJfZRzRAH13d01ZBCtcITtjs6ydPcNhxjK4O7c';\r\nconst baseURL = 'https://api.nasa.gov/planetary/apod';\r\n\r\n\r\nexport const getPicture = async (date, hd = false) => {\r\n    const url = `${baseURL}?date=${formatDate(date)}&api_key=${api_key}&hd=${hd}`;\r\n    const response = await getQuery(url);\r\n    return parseResponse(response);\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n\r\n    return `${year}-${month}-${day}`;\r\n    // January\r\n    // February\r\n    // March\r\n    // April\r\n    // May\r\n    // June\r\n    // July\r\n    // August\r\n    // September\r\n    // October\r\n    // November\r\n    // December\r\n};\r\n\r\nconst getQuery = (url) => {\r\n    return fetch(url).then(response => response.json());\r\n};\r\n\r\nconst parseResponse = (response) => {\r\n    const url = !response.url ? defaultImages : response.url;\r\n    return {\r\n        url: !response.url ? defaultImages : url,\r\n        hdurl: !response.hdurl ? url : response.hdurl,\r\n        title: !response.title ? 'Данных нет' : response.title,\r\n        media_type: !response.media_type ? 'image' : response.media_type,\r\n        date: !response.date ? 'Возможно дата еще не наступила или нет сохраненных данных' : response.date,\r\n        explanation: response.explanation\r\n    };\r\n};","import {getPicture} from \"../api/api\";\r\nimport defaultImages from \"../images/not_found.gif\";\r\n\r\nconst SET_IMAGE = 'SET-IMAGE';\r\nconst SET_LOADING = 'SET-LOADING';\r\n\r\nconst initImgState = {\r\n    isLoad: false,\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    media_type:\"image\",\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst imageReducer = (state = initImgState, action) => {\r\n    switch (action.type) {\r\n        case SET_IMAGE:\r\n            return {\r\n                ...state,\r\n                url: action.newImage.url,\r\n                hdurl: action.newImage.hdurl,\r\n                media_type: action.newImage.media_type,\r\n                title: action.newImage.title,\r\n                date: action.newImage.date,\r\n                explanation: action.newImage.explanation,\r\n                isLoad: !state.isLoad\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoad: !state.isLoad\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImageAC = (newImage) => ({type: SET_IMAGE, newImage});\r\nconst setLoadingAC = () => ({type: SET_LOADING});\r\n\r\n\r\nexport const setImage = (date) => async (dispatch) => {\r\n    dispatch(setLoadingAC());\r\n    const response = await getPicture(date);\r\n    dispatch(setImageAC(response));\r\n};\r\n\r\nexport default imageReducer;","import defaultImages from \"../images/not_found.gif\";\r\n\r\nconst SET_MODAL_IMAGE = 'SET-MODAL-IMAGE';\r\nconst MOVE_ARRAY = 'MOVE-ARRAY';\r\n\r\nconst initImageState = {\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    media_type:\"image\",\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst initState = {\r\n    isShow: false,\r\n    viewedImages: [initImageState],\r\n    key: 0,\r\n    isShowPrev: false,\r\n    isShowNext: false,\r\n};\r\n\r\n\r\nconst modalReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_MODAL_IMAGE:\r\n            return !state.isShow\r\n                ? {\r\n                    ...state,\r\n                    isShow: !state.isShow,\r\n                    viewedImages: action.viewedImages,\r\n                    key: action.key,\r\n                    isShowPrev: action.isShowPrev,\r\n                    isShowNext: action.isShowNext,\r\n                }\r\n                : {\r\n                    ...state,\r\n                    isShow: !state.isShow\r\n                };\r\n        case MOVE_ARRAY:\r\n            return {\r\n                ...state,\r\n                key: action.key,\r\n                isShowPrev: action.isShowPrev,\r\n                isShowNext: action.isShowNext\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst showHideFlow = (array = [], id) => {\r\n    const size = array.length;\r\n    const resultObject = (isShowPrev, isShowNext) => ({isShowPrev, isShowNext});\r\n\r\n    if (size === 1) return resultObject(false, false);\r\n    if (id + 1 === size) return resultObject(true, false);\r\n    if (id === 0) return resultObject(false, true);\r\n    return resultObject(true, true);\r\n};\r\n\r\nconst setModalImageAC = (viewedImages, isShowPrev, isShowNext, key = 0) => ({\r\n    type: SET_MODAL_IMAGE,\r\n    viewedImages,\r\n    key,\r\n    isShowPrev,\r\n    isShowNext\r\n});\r\n\r\nconst moveImageAC = (key, isShowPrev, isShowNext) => ({type: MOVE_ARRAY, key, isShowPrev, isShowNext});\r\n\r\nexport const setModalImages = (newImagesArray, key) => (dispatch) => {\r\n    const buttonShow = showHideFlow(newImagesArray, key);\r\n    dispatch(setModalImageAC(newImagesArray, buttonShow.isShowPrev, buttonShow.isShowNext, key));\r\n};\r\n\r\nexport const setModalImage = (newImage) => (dispatch) => {\r\n    const buttonShow = showHideFlow(newImage, 0);\r\n    dispatch(setModalImageAC(newImage, buttonShow.isShowPrev, buttonShow.isShowNext));\r\n};\r\n\r\nexport const movePrev = (key,images) => (dispatch) => {\r\n    key--;\r\n    const buttonShow = showHideFlow(images, key);\r\n    dispatch(moveImageAC(key, buttonShow.isShowPrev, buttonShow.isShowNext));\r\n};\r\n\r\nexport const moveNext = (key,images) => (dispatch) => {\r\n    key++;\r\n    const buttonShow = showHideFlow(images, key);\r\n    dispatch(moveImageAC(key, buttonShow.isShowPrev, buttonShow.isShowNext));\r\n};\r\n\r\nexport default modalReducer;","import {getPicture} from \"../api/api\";\r\n\r\nconst SET_ARRAY = 'SET-ARRAY';\r\nconst START_LOADING = 'START-LOADING';\r\nlet queryCounter = 0;\r\n\r\nconst initState = {\r\n    query: 0,\r\n    isLoad: false,\r\n    imagesArray: []\r\n};\r\n\r\nconst monthImageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARRAY:\r\n            return (state.query === action.query) ? {\r\n                ...state,\r\n                query: action.query,\r\n                imagesArray: action.imagesArray,\r\n                isLoad: false\r\n            } : {\r\n                ...state,\r\n                isLoad: true\r\n            };\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                query: action.query > state.query ? action.query : state.query,\r\n                isLoad: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImagesArrayAC = (imagesArray, query) => ({type: SET_ARRAY, imagesArray, query});\r\nconst startLoadingAC = (query) => ({type: START_LOADING, query});\r\n\r\nexport const setImagesArray = (date) => async (dispatch) => {\r\n    const currentQueryCounter = ++queryCounter;\r\n    dispatch(startLoadingAC(currentQueryCounter));\r\n\r\n    let imagesArray = [];\r\n    const daysInMonth = 32 - new Date(date.getFullYear(), date.getMonth(), 32).getDate();\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n        let currentDate = new Date(date.getFullYear(), date.getMonth(), i);\r\n        imagesArray.push(await getPicture(currentDate));\r\n    }\r\n\r\n    dispatch(setImagesArrayAC(imagesArray.filter(i => i.explanation), currentQueryCounter));\r\n};\r\n\r\n\r\nexport default monthImageReducer;","import React, {useEffect} from 'react';\nimport CalendarContainer from './components/Calendar/CalendarContainer';\nimport GridPictures from './components/GridPictures/GridPictures';\nimport ModalImage from './components/ModalImage/ModalImage';\nimport Content from './components/Content/Content';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {setImage} from \"./redux/image-reducer\";\nimport {moveNext, movePrev, setModalImage, setModalImages} from \"./redux/modal-reducer\";\nimport {setImagesArray} from \"./redux/month-image-reducer\";\nimport {formatDate} from \"./api/api\";\n\n\nconst App = ({\n                 image, modalImages, monthImages, isLoadMonthImages, setImage, setModalImage,\n                 setImagesArray, setModalImages, movePrev, moveNext\n             }) => {\n    const getDate = () => {\n        return !localStorage.getItem('date')\n            ? new Date()\n            : new Date(localStorage.getItem('date'));\n    };\n\n    useEffect(() => {\n        setImage(getDate());\n        setImagesArray(getDate());\n    }, []);\n\n    let onChange = (value) => {\n        const localDate = formatDate(value);\n        const currentDate = formatDate(new Date());\n\n        localDate === currentDate\n            ? localStorage.removeItem('date')\n            : localStorage.setItem('date', value);\n\n        setImage(value);\n    };\n\n    const onActiveStartDateChange = ({activeStartDate, value, view}) => {\n        setImagesArray(activeStartDate);\n    };\n\n    return (\n        <div className='App-wrapper'>\n            <CalendarContainer\n                onChange={onChange}\n                onActiveStartDateChange={onActiveStartDateChange}\n                value={getDate()}/>\n            <Content img={image} setModal={setModalImage}/>\n            <GridPictures imgArray={monthImages} setModal={setModalImages} isLoad={isLoadMonthImages}/>\n            <ModalImage images={modalImages} setModal={setModalImage} movePrev={movePrev} moveNext={moveNext}/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    image: state.imageReducer,\n    modalImages: state.modalReducer,\n    monthImages: state.monthImageReducer.imagesArray,\n    isLoadMonthImages: state.monthImageReducer.isLoad\n});\n\nconst AppContainer = compose(\n    connect(mapStateToProps, {\n        setImage,\n        setModalImage,\n        setModalImages,\n        setImagesArray,\n        movePrev,\n        moveNext\n    })\n)(App);\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport imageReducer from './image-reducer';\r\nimport modalReducer from \"./modal-reducer\";\r\nimport monthImageReducer from \"./month-image-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    imageReducer,\r\n    modalReducer,\r\n    monthImageReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from \"./redux/redux-store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/not_found.e9ff6ff5.gif\";"],"sourceRoot":""}