{"version":3,"sources":["images/not_found.gif","components/Calendar/CalendarContainer.jsx","components/Common/ImageVideoFlow/ImageVideoFlow.jsx","components/GridPictures/Picture/Picture.jsx","components/Common/Preloader/Preloader.jsx","components/GridPictures/GridPictures.jsx","components/Common/Buttons/PrevImageButton.js","components/Common/Buttons/DataTitle.js","components/Common/Buttons/NextImageButton.js","components/Common/Buttons/CloseButton.js","components/Common/Buttons/DownloadButton.js","components/ModalImage/ModalImageContainer.jsx","components/Content/Content.jsx","api/api.js","redux/image-reducer.js","redux/modal-reducer.js","redux/month-image-reducer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","CalendarContainer","onActiveStartDateChange","onChange","value","className","locale","Image","title","url","restProp","alt","effect","src","visibleByDefault","Video","frameBorder","allowFullScreen","allowtransparency","ImageVideoFlow","media_type","Picture","img","setModal","imgArray","id","onClick","date","Preloader","GridPictures","isLoad","pictures","map","i","key","PrevImageButton","data-title","viewBox","xmlns","fillRule","d","NextImageButton","CloseButton","DownloadButton","href","target","download","CustomSlide","React","memo","image","isShowExplanation","setIsShowExplanation","explanation","Explanation","images","useState","newKey","setNewKey","modalClass","setModalClass","useEffect","modal_content","isShow","settings","speed","slidesToShow","slidesToScroll","initialSlide","nextArrow","prevArrow","beforeChange","current","next","imageArray","viewedImages","e","hdurl","Text","Content","isHide","setIsHide","onMouseOver","onMouseOut","api_key","baseURL","options","day","month","year","formatDate","getDate","getMonth","getFullYear","getPicture","a","hd","fetch","then","response","json","parseResponse","defaultImages","Date","toLocaleString","initImgState","imageReducer","state","action","type","newImage","initState","setModalImageAC","modalReducer","queryCounter","query","imagesArray","setImagesArrayAC","isPassedMonth","currentDate","monthImageReducer","AppContainer","compose","connect","modalImages","monthImages","isLoadMonthImages","setImage","dispatch","setModalImage","setModalImages","newImagesArray","setImagesArray","currentQueryCounter","daysInMonth","push","filter","props","localStorage","getItem","removeItem","setItem","activeStartDate","view","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8b28706e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not_found.e9ff6ff5.gif\";","import React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst CalendarContainer = ({onActiveStartDateChange, onChange, value}) => {\r\n\r\n    return (\r\n        <div className='App-calendar'>\r\n            <Calendar\r\n                onChange={onChange}\r\n                value={value}\r\n                onActiveStartDateChange={onActiveStartDateChange}\r\n                locale='en'\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarContainer;\r\n","import {LazyLoadImage} from \"react-lazy-load-image-component\";\r\nimport React from \"react\";\r\n\r\n\r\nconst ImageVideoFlow = ({media_type, title, url, ...restProp}) => {\r\n    switch (media_type) {\r\n        case 'image':\r\n            return <Image title={title} url={url} {...restProp}/>;\r\n        case 'video':\r\n            return <Video url={url} {...restProp}/>;\r\n        default: return null;\r\n    }\r\n};\r\n\r\nconst Image = ({title, url, ...restProp}) => {\r\n    return (\r\n        <LazyLoadImage alt={title}\r\n                       title={title}\r\n                       effect=\"blur\"\r\n                       src={url}\r\n                       visibleByDefault={true}\r\n                       {...restProp}/>\r\n    )\r\n};\r\n\r\nconst Video = ({url}) => {\r\n    return  <iframe src={url} frameBorder=\"0\" allowFullScreen allowtransparency='true' title={url}/>;\r\n};\r\n\r\nexport default ImageVideoFlow;","import React from 'react';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport ImageVideoFlow from \"../../Common/ImageVideoFlow/ImageVideoFlow\";\r\n\r\nconst Picture = ({img, setModal, imgArray, id}) => {\r\n\r\n    const setModalImages = () => setModal(imgArray, id);\r\n\r\n    return (\r\n        <div className='item' onClick={setModalImages}>\r\n            <ImageVideoFlow media_type={img.media_type} title={img.title} url={img.url}/>\r\n            <p><b>{img.title}</b></p>\r\n            <p>{img.date}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Picture;","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='preloader'>\r\n            <div className=\"round\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport Picture from './Picture/Picture';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nconst GridPictures = ({imgArray, setModal, isLoad}) => {\r\n\r\n\r\n\r\n    const pictures = imgArray\r\n        .map((i, id) => <Picture key={id}\r\n                                 id={id}\r\n                                 imgArray={imgArray}\r\n                                 setModal={setModal}\r\n                                 img={i}/>);\r\n\r\n    return (\r\n        <>\r\n            {isLoad\r\n                ? <Preloader/>\r\n                : <div className='App-all-content'>\r\n                    {!imgArray ? '' : pictures}\r\n                </div>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GridPictures;","import React from \"react\";\r\nimport {prevImageButton} from \"./DataTitle\";\r\n\r\n\r\nconst PrevImageButton = ({onClick}) => {\r\n    return (\r\n        <div className='arrow__left title' data-title={prevImageButton}>\r\n            <svg onClick={onClick}\r\n                 viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\r\n                <path fillRule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PrevImageButton;","// export const closeButton = \"Закрыть\";\r\n// export const downloadButton = \"Скачать\";\r\n// export const nextImageButton = \"Следующая картинка\";\r\n// export const prevImageButton = \"Предыдущая картинка\";\r\nexport const closeButton = \"Close\";\r\nexport const downloadButton = \"Download\";\r\nexport const nextImageButton = \"Next\";\r\nexport const prevImageButton = \"Previous\";\r\nexport const infoButton = \"More information\";","import React from \"react\";\r\nimport {nextImageButton} from \"./DataTitle\";\r\n\r\n\r\nconst NextImageButton = ({onClick}) => {\r\n    return (\r\n        <div className='arrow__right title' data-title={nextImageButton}>\r\n            <svg onClick={onClick}\r\n                 viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                <path fillRule=\"evenodd\"\r\n                      d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\r\n                <path fillRule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NextImageButton;","import React from \"react\";\r\nimport {closeButton} from \"./DataTitle\";\r\n\r\n\r\nconst CloseButton = ({onClick}) => {\r\n    return (\r\n        <div className='modal__cross title' data-title={closeButton}>\r\n            <div onClick={onClick} className='area'>\r\n                <svg\r\n                    viewBox=\"0 0 16 16\" xmlns='http://www.w3.org/2000/svg'>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CloseButton;","import React from \"react\";\r\nimport {downloadButton} from \"./DataTitle\";\r\n\r\nconst DownloadButton = ({url}) => {\r\n    return (\r\n        <div className='modal__download  title' data-title={downloadButton}>\r\n            <a href={url} target='_blank' download>\r\n                <svg viewBox=\"0 0 16 16\"\r\n                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M4.646 7.646a.5.5 0 0 1 .708 0L8 10.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                    <path fillRule=\"evenodd\" d=\"M8 4.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5z\"/>\r\n                </svg>\r\n            </a>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DownloadButton;","import React, {useEffect, useState} from 'react';\r\nimport PrevImageButton from '../Common/Buttons/PrevImageButton';\r\nimport NextImageButton from '../Common/Buttons/NextImageButton';\r\nimport ImageVideoFlow from '../Common/ImageVideoFlow/ImageVideoFlow';\r\nimport CloseButton from '../Common/Buttons/CloseButton';\r\nimport DownloadButton from '../Common/Buttons/DownloadButton';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst bg_class = 'background-modal-image';\r\nconst modal_content = 'modal-content';\r\nconst modal_image_content = 'modal-image-content';\r\n\r\nconst ModalImageContainer = ({images, setModal}) => {\r\n\r\n    const [isShowExplanation, setIsShowExplanation] = useState(false);\r\n    const [newKey, setNewKey] = useState(images.key);\r\n    const [modalClass, setModalClass] = useState('');\r\n\r\n    useEffect(() => {\r\n        setModalClass(modal_content + ' background-modal-animation');\r\n        setIsShowExplanation(false);\r\n        setNewKey(images.key);\r\n    }, [images.isShow]);\r\n\r\n    const closeModalImage = (e) => {\r\n        const targetClass = e.target.className;\r\n        switch (targetClass) {\r\n            case  bg_class :\r\n            case  modal_content :\r\n            case  modal_image_content :\r\n                return setModal();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const settings = {\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        initialSlide: images.key,\r\n        nextArrow: <NextImageButton/>,\r\n        prevArrow: <PrevImageButton/>,\r\n        beforeChange: (current, next) => {\r\n            setModalClass(modal_content);\r\n            setNewKey(next)\r\n        },\r\n    };\r\n\r\n    const imageArray = images.viewedImages.map((i, id) => {\r\n        return <CustomSlide key={id}\r\n                            image={i}\r\n                            isShowExplanation={isShowExplanation}\r\n                            setIsShowExplanation={setIsShowExplanation}/>\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {(images.isShow) &&\r\n            <div className={modalClass} onClick={closeModalImage}>\r\n                <CloseButton onClick={setModal}/>\r\n                <DownloadButton url={images.viewedImages[newKey].hdurl}/>\r\n                <Slider {...settings}>\r\n                    {imageArray}\r\n                </Slider>\r\n            </div>}\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nconst CustomSlide = React.memo(({image, isShowExplanation, setIsShowExplanation}) => {\r\n    return (\r\n        <div className={modal_image_content}>\r\n            <div className='image-explanation'>\r\n\r\n                {isShowExplanation &&\r\n                <Explanation media_type={image.media_type} explanation={image.explanation}/>\r\n                }\r\n\r\n                <ImageVideoFlow media_type={image.media_type}\r\n                                title={image.title}\r\n                                url={image.url}/>\r\n            </div>\r\n            <p>{image.title} [ {image.date} ] <a\r\n                className='more__info'\r\n                onClick={() => setIsShowExplanation(!isShowExplanation)}>\r\n                more informtion\r\n            </a>\r\n            </p>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst Explanation = ({media_type, explanation}) => {\r\n    switch (media_type) {\r\n        case 'image':\r\n            return <div className='pullUp'>{explanation}</div>;\r\n        case 'video':\r\n            return <div className='pullDown'>{explanation}</div>;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport default React.memo(ModalImageContainer);","import React, {useState} from 'react';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport ImageVideoFlow from \"../Common/ImageVideoFlow/ImageVideoFlow\";\r\n\r\nconst Content = ({img, setModal}) => {\r\n    const [isHide, setIsHide] = useState(true);\r\n\r\n    return (\r\n        <div className='App-content'>\r\n            <div className='Content-img'>\r\n                {img.isLoad\r\n                    ? <Preloader/>\r\n                    : <ImageVideoFlow media_type={img.media_type}\r\n                                      title={'Нажмите для увеличения'}\r\n                                      url={img.url}\r\n                                      onClick={() => setModal([img])}\r\n                                      onMouseOver={() => setIsHide(false)}\r\n                                      onMouseOut={() => setIsHide(true)}/>\r\n\r\n                }\r\n            </div>\r\n            {(isHide && !img.isLoad) && (\r\n                <Text title={img.title}\r\n                      date={img.date}\r\n                      explanation={img.explanation}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Text = ({title, date, explanation}) => {\r\n    return (\r\n        <div className='info'>\r\n            <span><b>{title}</b></span>\r\n            <p>{date}</p>\r\n            <p className='Explanation'>{explanation}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Content;\r\n","import defaultImages from \"../images/not_found.gif\";\r\n\r\nconst api_key = 'SaoJfZRzRAH13d01ZBCtcITtjs6ydPcNhxjK4O7c';\r\nconst baseURL = 'https://api.nasa.gov/planetary/apod';\r\n\r\nconst options = {\r\n    day: 'numeric',\r\n    month: 'long',\r\n    year: 'numeric'\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nexport const getPicture = async (date, hd = false) => {\r\n    const url = `${baseURL}?date=${formatDate(date)}&api_key=${api_key}&hd=${hd}`;\r\n    const response = await fetch(url).then(response => response.json());\r\n    return parseResponse(response);\r\n};\r\n\r\nconst parseResponse = (response) => {\r\n    const url = !response.url ? defaultImages : response.url;\r\n    return {\r\n        url: !response.url ? defaultImages : url,\r\n        hdurl: !response.hdurl ? url : response.hdurl,\r\n        title: !response.title ? 'Данных нет' : response.title,\r\n        media_type: !response.media_type ? 'image' : response.media_type,\r\n        date: !response.date\r\n            ? 'Возможно дата еще не наступила или нет сохраненных данных'\r\n            : new Date(response.date).toLocaleString(\"en-US\", options),\r\n        explanation: response.explanation\r\n    };\r\n};","import {getPicture} from \"../api/api\";\r\nimport defaultImages from \"../images/not_found.gif\";\r\n\r\nconst SET_IMAGE = 'SET-IMAGE';\r\nconst SET_LOADING = 'SET-LOADING';\r\n\r\nconst initImgState = {\r\n    isLoad: false,\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    media_type:\"image\",\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst imageReducer = (state = initImgState, action) => {\r\n    switch (action.type) {\r\n        case SET_IMAGE:\r\n            return {\r\n                ...state,\r\n                url: action.newImage.url,\r\n                hdurl: action.newImage.hdurl,\r\n                media_type: action.newImage.media_type,\r\n                title: action.newImage.title,\r\n                date: action.newImage.date,\r\n                explanation: action.newImage.explanation,\r\n                isLoad: !state.isLoad\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoad: !state.isLoad\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImageAC = (newImage) => ({type: SET_IMAGE, newImage});\r\nconst setLoadingAC = () => ({type: SET_LOADING});\r\n\r\n\r\nexport const setImage = (date) => async (dispatch) => {\r\n    dispatch(setLoadingAC());\r\n    const response = await getPicture(date);\r\n    dispatch(setImageAC(response));\r\n};\r\n\r\nexport default imageReducer;","import defaultImages from \"../images/not_found.gif\";\r\n\r\nconst SET_MODAL_IMAGE = 'SET-MODAL-IMAGE';\r\n\r\nconst initImageState = {\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    media_type: \"image\",\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst initState = {\r\n    isShow: false,\r\n    key: 0,\r\n    viewedImages: [initImageState]\r\n};\r\n\r\n\r\nconst modalReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_MODAL_IMAGE:\r\n            return !state.isShow\r\n                ? {\r\n                    ...state,\r\n                    isShow: !state.isShow,\r\n                    key: action.key,\r\n                    viewedImages: action.viewedImages,\r\n                }\r\n                : {\r\n                    ...state,\r\n                    isShow: !state.isShow\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setModalImageAC = (viewedImages, key = 0) => ({\r\n    type: SET_MODAL_IMAGE,\r\n    viewedImages,\r\n    key\r\n});\r\n\r\nexport const setModalImages = (newImagesArray, key) => (dispatch) => {\r\n    dispatch(setModalImageAC(newImagesArray, key));\r\n};\r\n\r\nexport const setModalImage = (newImage) => (dispatch) => {\r\n    dispatch(setModalImageAC(newImage));\r\n};\r\n\r\nexport default modalReducer;","import {getPicture} from \"../api/api\";\r\n\r\nconst SET_ARRAY = 'SET-ARRAY';\r\nconst START_LOADING = 'START-LOADING';\r\nlet queryCounter = 0;\r\n\r\nconst initState = {\r\n    query: 0,\r\n    isLoad: false,\r\n    imagesArray: []\r\n};\r\n\r\nconst monthImageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARRAY:\r\n            return (state.query === action.query) ? {\r\n                ...state,\r\n                query: action.query,\r\n                imagesArray: action.imagesArray,\r\n                isLoad: false\r\n            } : {\r\n                ...state,\r\n                isLoad: true\r\n            };\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                query: action.query > state.query ? action.query : state.query,\r\n                isLoad: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImagesArrayAC = (imagesArray, query) => ({type: SET_ARRAY, imagesArray, query});\r\nconst startLoadingAC = (query) => ({type: START_LOADING, query});\r\n\r\n\r\nexport const setImagesArray = (date) => async (dispatch) => {\r\n    const currentQueryCounter = ++queryCounter;\r\n\r\n    dispatch(startLoadingAC(currentQueryCounter));\r\n\r\n    if (!isPassedMonth(date)) return dispatch(setImagesArrayAC([], currentQueryCounter));\r\n\r\n    let imagesArray = [];\r\n    const daysInMonth = 32 - new Date(date.getFullYear(), date.getMonth(), 32).getDate();\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n        let currentDate = new Date(date.getFullYear(), date.getMonth(), i);\r\n        imagesArray.push(await getPicture(currentDate));\r\n    }\r\n\r\n    return dispatch(setImagesArrayAC(imagesArray.filter(i => i.explanation), currentQueryCounter));\r\n};\r\n\r\n\r\nconst isPassedMonth = (date) => {\r\n    const currentDate = new Date();\r\n\r\n    if (date.getFullYear() > currentDate.getFullYear()) return false;\r\n\r\n    return !(date.getFullYear() === currentDate.getFullYear() && date.getMonth() > currentDate.getMonth());\r\n};\r\n\r\nexport default monthImageReducer;","import React, {useEffect} from 'react';\r\nimport CalendarContainer from './components/Calendar/CalendarContainer';\r\nimport GridPictures from './components/GridPictures/GridPictures';\r\nimport ModalImageContainer from './components/ModalImage/ModalImageContainer';\r\nimport Content from './components/Content/Content';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './App.css';\r\nimport './3d.css';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {setImage} from \"./redux/image-reducer\";\r\nimport {setModalImage, setModalImages} from \"./redux/modal-reducer\";\r\nimport {setImagesArray} from \"./redux/month-image-reducer\";\r\nimport {formatDate} from \"./api/api\";\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    const {\r\n        image,\r\n        setImage,\r\n        modalImages,\r\n        setModalImage,\r\n        setModalImages,\r\n        monthImages,\r\n        setImagesArray,\r\n        isLoadMonthImages,\r\n    } = props;\r\n\r\n    const getDate = () => {\r\n        return !localStorage.getItem('date')\r\n            ? new Date()\r\n            : new Date(localStorage.getItem('date'));\r\n    };\r\n\r\n    useEffect(() => {\r\n        setImage(getDate());\r\n        setImagesArray(getDate());\r\n    }, []);\r\n\r\n    let onChange = (value) => {\r\n        const localDate = formatDate(value);\r\n        const currentDate = formatDate(new Date());\r\n\r\n        localDate === currentDate\r\n            ? localStorage.removeItem('date')\r\n            : localStorage.setItem('date', value);\r\n\r\n        setImage(value);\r\n    };\r\n\r\n    const onActiveStartDateChange = ({activeStartDate, value, view}) => {\r\n        setImagesArray(activeStartDate);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='App-wrapper'>\r\n                <CalendarContainer\r\n                    onChange={onChange}\r\n                    onActiveStartDateChange={onActiveStartDateChange}\r\n                    value={getDate()}/>\r\n                <Content img={image} setModal={setModalImage}/>\r\n                <GridPictures imgArray={monthImages} setModal={setModalImages} isLoad={isLoadMonthImages}/>\r\n            </div>\r\n            <ModalImageContainer images={modalImages} setModal={setModalImage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    image: state.imageReducer,\r\n    modalImages: state.modalReducer,\r\n    monthImages: state.monthImageReducer.imagesArray,\r\n    isLoadMonthImages: state.monthImageReducer.isLoad\r\n});\r\n\r\nconst AppContainer = compose(\r\n    connect(mapStateToProps, {\r\n        setImage,\r\n        setModalImage,\r\n        setModalImages,\r\n        setImagesArray,\r\n    })\r\n)(App);\r\n\r\nexport default AppContainer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport imageReducer from './image-reducer';\r\nimport modalReducer from \"./modal-reducer\";\r\nimport monthImageReducer from \"./month-image-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    imageReducer,\r\n    modalReducer,\r\n    monthImageReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppContainer from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./redux/redux-store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <AppContainer/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}