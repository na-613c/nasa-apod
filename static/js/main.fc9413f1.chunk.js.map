{"version":3,"sources":["components/Calendar/CalendarContainer.jsx","components/GridPictures/Picture/Picture.jsx","components/Preloader/Preloader.jsx","components/GridPictures/GridPictures.jsx","components/BigImage/BigImage.jsx","components/Content/Content.jsx","api/api.js","redux/image-reducer.js","redux/modal-reducer.js","redux/month-image-reducer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","images/not_found.gif"],"names":["CalendarContainer","onActiveStartDateChange","onChange","value","className","Picture","img","setBigImage","onClick","alt","title","effect","src","url","visibleByDefault","date","Preloader","GridPictures","imgArray","setModal","isLoad","pictures","map","i","id","key","BigImage","image","isShow","e","target","viewBox","xmlns","fill-rule","d","href","hdurl","download","Text","explanation","Content","useState","isHide","setIsHide","onMouseOver","onMouseOut","api_key","baseURL","getPicture","a","hd","formatDate","getQuery","response","parseResponse","day","getDate","month","getMonth","year","getFullYear","fetch","then","json","defaultImages","initImgState","imageReducer","state","action","type","newImage","initState","modalReducer","queryCounter","query","imagesArray","setImagesArrayAC","monthImageReducer","AppContainer","compose","connect","modalImage","monthImages","isLoadMonthImages","setImage","dispatch","setModalImage","setModalImageAC","setImagesArray","currentQueryCounter","daysInMonth","Date","currentDate","push","filter","localStorage","getItem","useEffect","removeItem","setItem","activeStartDate","view","Boolean","window","location","hostname","match","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.fc9413f1.chunk.js","sourcesContent":["import React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst CalendarContainer = ({onActiveStartDateChange, onChange, value}) => {\n\n    return (\n        <div className='App-calendar'>\n            <Calendar\n                onChange={onChange}\n                value={value}\n                onActiveStartDateChange={onActiveStartDateChange}\n            />\n        </div>\n    );\n};\n\nexport default CalendarContainer;\n","import React from 'react';\r\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst Picture = ({img, setBigImage}) => {\r\n\r\n    return (\r\n        <div className='item' onClick={() => setBigImage(img)}>\r\n            <LazyLoadImage alt={img.title}\r\n                           effect=\"blur\"\r\n                           src={img.url}\r\n                           visibleByDefault={true}/>\r\n            <p><b>{img.title}</b></p>\r\n            <p>{img.date}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Picture;","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='preloader'>\r\n            <div className=\"round\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport Picture from './Picture/Picture';\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\nconst GridPictures = ({imgArray, setModal, isLoad}) => {\r\n\r\n    const pictures = imgArray\r\n        .map((i, id) => <Picture key={id}\r\n                                 setBigImage={setModal}\r\n                                 img={i}/>);\r\n\r\n    return (\r\n        <>\r\n            {isLoad\r\n                ? <Preloader/>\r\n                : <div className='App-all-content'>\r\n                    {!imgArray ? '' : pictures}\r\n                </div>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GridPictures;","import React from 'react';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst BigImage = ({image, setModal}) => {\r\n    if (image.isShow) {\r\n        const onClickSetBigImage = (e) => {\r\n            if (e.target.className === 'background-big-image') setModal();\r\n        };\r\n\r\n        return (\r\n            <div className='background-big-image'\r\n                 key={image}\r\n                 onClick={onClickSetBigImage}>\r\n\r\n                <svg onClick={setModal} className='modal__cross'\r\n                     viewBox=\"0 0 16 16\" xmlns='http://www.w3.org/2000/svg'>\r\n                    <path fill-rule=\"evenodd\"\r\n                          d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                    <path fill-rule=\"evenodd\"\r\n                          d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\r\n                    <path fill-rule=\"evenodd\"\r\n                          d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\r\n                </svg>\r\n\r\n                <a href={image.hdurl} target='_blank' download>\r\n                    <svg className='modal__download' viewBox=\"0 0 16 16\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fill-rule=\"evenodd\"\r\n                              d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path fill-rule=\"evenodd\"\r\n                              d=\"M4.646 7.646a.5.5 0 0 1 .708 0L8 10.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\r\n                        <path fill-rule=\"evenodd\" d=\"M8 4.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5z\"/>\r\n                    </svg>\r\n                </a>\r\n\r\n                <div className='big-image'>\r\n                    <img src={image.url} alt=''/>\r\n                    <p>{image.title} [ {image.date} ]</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return (<></>);\r\n};\r\n\r\nexport default BigImage;","import React, {useState} from 'react';\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst Content = ({img, setBigImage}) => {\r\n    const [isHide, setIsHide] = useState(true);\r\n\r\n    return (\r\n        <div className='App-content'>\r\n            <div className='Content-img'>\r\n                {img.isLoad\r\n                    ? <Preloader/>\r\n                    : <img onClick={() => setBigImage(img)}\r\n                           onMouseOver={() => setIsHide(false)}\r\n                           onMouseOut={() => setIsHide(true)}\r\n                           src={img.url}\r\n                           alt={img.title}\r\n                           title={!img.title ? '' : 'Нажмите для увеличения'}/>\r\n                }\r\n            </div>\r\n            {(isHide && !img.isLoad) && (\r\n                <Text title={img.title}\r\n                      date={img.date}\r\n                      explanation={img.explanation}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Text = ({title, date, explanation}) => {\r\n    return (\r\n        <>\r\n            <span><b>{title}</b></span>\r\n            <p>{date}</p>\r\n            <p className='Explanation'>{explanation}</p>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Content;\r\n","import defaultImages from \"../images/not_found.gif\";\r\n\r\nconst api_key = 'SaoJfZRzRAH13d01ZBCtcITtjs6ydPcNhxjK4O7c';\r\nconst baseURL = 'https://api.nasa.gov/planetary/apod';\r\n\r\n\r\nexport const getPicture = async (date, hd = false) => {\r\n    const url = `${baseURL}?date=${formatDate(date)}&api_key=${api_key}&hd=${hd}`;\r\n    const response = await getQuery(url);\r\n    return parseResponse(response);\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst getQuery = (url) => {\r\n    return fetch(url).then(response => response.json());\r\n};\r\n\r\nconst parseResponse = (response) => {\r\n    const url = !response.url ? defaultImages : response.url;\r\n    return {\r\n        url: !response.hdurl ? defaultImages : url,\r\n        hdurl: !response.hdurl ? url : response.hdurl,\r\n        title: !response.title ? 'Данных нет' : response.title,\r\n        date: !response.date ? 'Возможно дата еще не наступила или нет сохраненных данных' : response.date,\r\n        explanation: response.explanation\r\n    };\r\n};","import {getPicture} from \"../api/api\";\r\nimport defaultImages from \"../images/not_found.gif\";\r\n\r\nconst SET_IMAGE = 'SET-IMAGE';\r\nconst SET_LOADING = 'SET-LOADING';\r\n\r\nconst initImgState = {\r\n    isLoad: false,\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst imageReducer = (state = initImgState, action) => {\r\n    switch (action.type) {\r\n        case SET_IMAGE:\r\n            return {\r\n                ...state,\r\n                url: action.newImage.url,\r\n                hdurl: action.newImage.hdurl,\r\n                title: action.newImage.title,\r\n                date: action.newImage.date,\r\n                explanation: action.newImage.explanation,\r\n                isLoad: !state.isLoad\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoad: !state.isLoad\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImageAC = (newImage) => ({type: SET_IMAGE, newImage});\r\nconst setLoadingAC = () => ({type: SET_LOADING});\r\n\r\n\r\nexport const setImage = (date) => async (dispatch) => {\r\n    dispatch(setLoadingAC());\r\n    const response = await getPicture(date);\r\n    dispatch(setImageAC(response));\r\n};\r\n\r\nexport default imageReducer;","import defaultImages from \"../images/not_found.gif\";\r\nconst SET_MODAL = 'SET-MODAL';\r\n\r\nconst initState = {\r\n    isShow: false,\r\n    url: defaultImages,\r\n    hdurl: defaultImages,\r\n    title: 'Данных нет',\r\n    date: 'Возможно дата еще не наступила или нет сохраненных данных',\r\n    explanation: ''\r\n};\r\n\r\nconst modalReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_MODAL:\r\n            return !state.isShow\r\n                ? {\r\n                    ...state,\r\n                    isShow: !state.isShow,\r\n                    url: action.newImage.url,\r\n                    hdurl: action.newImage.hdurl,\r\n                    title: action.newImage.title,\r\n                    date: action.newImage.date,\r\n                    explanation: action.newImage.explanation\r\n                }\r\n                : {\r\n                    ...state,\r\n                    isShow: !state.isShow\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setModalImageAC = (newImage) => ({type: SET_MODAL, newImage});\r\n\r\nexport const setModalImage = (newImage) => (dispatch) => {\r\n    dispatch(setModalImageAC(newImage));\r\n};\r\n\r\nexport default modalReducer;","import {getPicture} from \"../api/api\";\r\n\r\nconst SET_ARRAY = 'SET-ARRAY';\r\nconst START_LOADING = 'START-LOADING';\r\nlet queryCounter = 0;\r\n\r\nconst initState = {\r\n    query: 0,\r\n    isLoad: false,\r\n    imagesArray: []\r\n};\r\n\r\nconst monthImageReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARRAY:\r\n            return (state.query === action.query) ? {\r\n                ...state,\r\n                query: action.query,\r\n                imagesArray: action.imagesArray,\r\n                isLoad: false\r\n            } : {\r\n                ...state,\r\n                isLoad: true\r\n            };\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                query: action.query > state.query ? action.query : state.query,\r\n                isLoad: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setImagesArrayAC = (imagesArray, query) => ({type: SET_ARRAY, imagesArray, query});\r\nconst startLoadingAC = (query) => ({type: START_LOADING, query});\r\n\r\nexport const setImagesArray = (date) => async (dispatch) => {\r\n    const currentQueryCounter = ++queryCounter;\r\n    dispatch(startLoadingAC(currentQueryCounter));\r\n\r\n    let imagesArray = [];\r\n    const daysInMonth = 32 - new Date(date.getFullYear(), date.getMonth(), 32).getDate();\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n        let currentDate = new Date(date.getFullYear(), date.getMonth(), i);\r\n        imagesArray.push(await getPicture(currentDate));\r\n    }\r\n\r\n    dispatch(setImagesArrayAC(imagesArray.filter(i => i.explanation), currentQueryCounter));\r\n};\r\n\r\n\r\nexport default monthImageReducer;","import React, {useEffect} from 'react';\nimport CalendarContainer from './components/Calendar/CalendarContainer';\nimport GridPictures from './components/GridPictures/GridPictures';\nimport BigImage from './components/BigImage/BigImage';\nimport Content from './components/Content/Content';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {setImage} from \"./redux/image-reducer\";\nimport {setModalImage} from \"./redux/modal-reducer\";\nimport {setImagesArray} from \"./redux/month-image-reducer\";\nimport {formatDate} from \"./api/api\";\n\n\nconst App = ({image, modalImage, monthImages, isLoadMonthImages, setImage, setModalImage, setImagesArray}) => {\n\n    const getDate = () => {\n        return !localStorage.getItem('date')\n            ? new Date()\n            : new Date(localStorage.getItem('date'));\n    };\n\n    useEffect(() => {\n        setImage(getDate());\n        setImagesArray(getDate());\n    }, []);\n\n    let onChange = (value) => {\n        const localDate = formatDate(value);\n        const currentDate = formatDate(new Date());\n\n        localDate === currentDate\n            ? localStorage.removeItem('date')\n            : localStorage.setItem('date', value);\n\n        setImage(value);\n    };\n\n    const onActiveStartDateChange = ({activeStartDate, value, view}) => {\n        setImagesArray(activeStartDate);\n    };\n\n    return (\n        <div className='App-wrapper'>\n            <CalendarContainer\n                onChange={onChange}\n                onActiveStartDateChange={onActiveStartDateChange}\n                value={getDate()}/>\n            <Content img={image} setBigImage={setModalImage}/>\n            <GridPictures imgArray={monthImages} setModal={setModalImage} isLoad={isLoadMonthImages}/>\n            <BigImage image={modalImage} setModal={setModalImage}/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    image: state.imageReducer,\n    modalImage: state.modalReducer,\n    monthImages: state.monthImageReducer.imagesArray,\n    isLoadMonthImages: state.monthImageReducer.isLoad\n});\n\nconst AppContainer = compose(\n    connect(mapStateToProps, {setImage, setModalImage, setImagesArray})\n)(App);\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport imageReducer from './image-reducer';\r\nimport modalReducer from \"./modal-reducer\";\r\nimport monthImageReducer from \"./month-image-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    imageReducer,\r\n    modalReducer,\r\n    monthImageReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from \"./redux/redux-store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/not_found.e9ff6ff5.gif\";"],"sourceRoot":""}